<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2014 Ondrej Skopek
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>sk.gymy.seminar</groupId>
  <artifactId>gymy-seminar</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/oskopek/gymy-seminar.git</url>
    <connection>scm:git:https://github.com/oskopek/gymy-seminar.git</connection>
    <developerConnection>scm:git:https://github.com/oskopek/gymy-seminar.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <url>https://www.ohloh.net/p/gymy-seminar</url>
  <description>A seminar grouping system.</description>

  <prerequisites>
    <maven>3.0.0</maven>
  </prerequisites>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jdk.version>14</jdk.version>
    <optaplanner.version>6.3.0.CR1</optaplanner.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>sk.gymy.seminar.app.SeminarApp</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.optaplanner</includeGroupIds>
              <outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifest>
              <mainClass>sk.gymy.seminar.app.SeminarApp</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <forkCount>0.5C</forkCount>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.3.2</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>sk.gymy.seminar.app.SeminarApp</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.16</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <checkstyleRules>
                <module name="Checker">
                  <property name="severity" value="warning" default="warning"/>
                  <!-- Checks whether files end with a new line.                        -->
                  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
                  <module name="NewlineAtEndOfFile">
                    <property name="lineSeparator" value="lf"/>
                  </module>
                  <!-- Checks that property files contain the same keys.         -->
                  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
                  <module name="Translation"/>
                  <!-- Checks for whitespace                               -->
                  <!-- See http://checkstyle.sf.net/config_whitespace.html -->
                  <module name="FileTabCharacter">
                    <property name="severity" value="error"/>
                    <property name="eachLine" value="true"/>
                  </module>
                  <!-- Miscellaneous other checks.                   -->
                  <!-- See http://checkstyle.sf.net/config_misc.html -->
                  <module name="RegexpSingleline">
                    <property name="format" value="\s+$"/>
                    <property name="minimum" value="0"/>
                    <property name="maximum" value="0"/>
                    <property name="message" value="Line has trailing spaces."/>
                  </module>
                  <module name="TreeWalker">
                    <property name="cacheFile" value="target/cachefile"/>
                    <property name="tabWidth" value="4"/>
                    <!-- Checks for Javadoc comments.                     -->
                    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
                    <module name="JavadocMethod">
                      <property name="allowMissingJavadoc" value="true"/>
                    </module>
                    <module name="JavadocStyle"/>
                    <!-- Checks for imports                              -->
                    <!-- See http://checkstyle.sf.net/config_import.html -->
                    <module name="IllegalImport"/>
                    <!-- defaults to sun.* packages -->
                    <module name="RedundantImport"/>
                    <module name="UnusedImports"/>
                    <!-- Checks for Size Violations.                    -->
                    <!-- See http://checkstyle.sf.net/config_sizes.html -->
                    <module name="LineLength">
                      <property name="max" value="120"/>
                    </module>
                    <module name="MethodLength">
                      <property name="severity" value="warning"/>
                    </module>
                    <module name="ParameterNumber"/>
                    <!-- Checks for whitespace                               -->
                    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
                    <module name="EmptyForIteratorPad"/>
                    <module name="GenericWhitespace"/>
                    <module name="MethodParamPad"/>
                    <module name="NoWhitespaceAfter"/>
                    <module name="NoWhitespaceBefore"/>
                    <module name="OperatorWrap"/>
                    <module name="ParenPad"/>
                    <module name="TypecastParenPad"/>
                    <module name="SeparatorWrap">
                      <property name="tokens" value="DOT"/>
                      <property name="option" value="nl"/>
                    </module>
                    <module name="SeparatorWrap">
                      <property name="tokens" value="COMMA"/>
                    </module>
                    <module name="WhitespaceAfter"/>
                    <module name="WhitespaceAround"/>
                    <!-- Modifier Checks                                    -->
                    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
                    <module name="ModifierOrder"/>
                    <module name="RedundantModifier"/>
                    <!-- Checks for blocks. You know, those {}'s         -->
                    <!-- See http://checkstyle.sf.net/config_blocks.html -->
                    <module name="EmptyBlock">
                      <property name="severity" value="warning"/>
                    </module>
                    <module name="LeftCurly"/>
                    <module name="NeedBraces"/>
                    <module name="RightCurly"/>
                    <!-- Checks for common coding problems               -->
                    <!-- See http://checkstyle.sf.net/config_coding.html -->
                    <module name="EmptyStatement"/>
                    <module name="EqualsHashCode"/>
                    <module name="IllegalInstantiation"/>
                    <module name="InnerAssignment"/>
                    <module name="MissingSwitchDefault"/>
                    <module name="SimplifyBooleanExpression"/>
                    <module name="SimplifyBooleanReturn"/>
                    <!-- Checks for class design                         -->
                    <!-- See http://checkstyle.sf.net/config_design.html -->
                    <module name="FinalClass"/>
                    <module name="HideUtilityClassConstructor"/>
                    <module name="InterfaceIsType"/>
                    <!-- Miscellaneous other checks.                   -->
                    <!-- See http://checkstyle.sf.net/config_misc.html -->
                    <module name="ArrayTypeStyle"/>
                    <module name="UpperEll"/>
                  </module>
                </module>
              </checkstyleRules>
              <consoleOutput>true</consoleOutput>
              <logViolationsToConsole>true</logViolationsToConsole>
              <failOnViolation>true</failOnViolation>
              <failsOnError>true</failsOnError>
              <includeResources>true</includeResources>
              <includeTestResources>true</includeTestResources>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-core</artifactId>
      <version>${optaplanner.version}</version>
    </dependency>
    <dependency>
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-examples</artifactId>
      <version>${optaplanner.version}</version>
    </dependency>
    <dependency>
      <groupId>org.optaplanner</groupId>
      <artifactId>optaplanner-examples</artifactId>
      <version>${optaplanner.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.7.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.0</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>lint</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
              <compilerArgument>-Xlint:unchecked</compilerArgument>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>