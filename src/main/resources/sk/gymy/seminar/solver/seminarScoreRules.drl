/*
 * Copyright 2010 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package sk.gymy.seminar.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.simple.SimpleScoreHolder;

import sk.gymy.seminar.domain.Seminar;
import sk.gymy.seminar.domain.Group;
import sk.gymy.seminar.domain.Student;

global SimpleScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################

//rule "StudentTwiceInGroup"
//    when
//        $student : Student()
//        $studentCount : Number(intValue > 2) from accumulate(
//            $group : Group()
//            and exists Seminar(group == $group, students.contains($student)),
//            count($group)
//        )
//    then
//        scoreHolder.addConstraintMatch(kcontext, -($studentCount.intValue() - 1));
//end

rule "StudentTwiceInGroup"
    when
        $student : Student()
        $seminarLeft : Seminar($id : id, $group : group, students.contains($student))
        $seminarRight : Seminar(id > $id, group == $group, students.contains($student))
    then
        scoreHolder.addConstraintMatch(kcontext, -1);
end


